% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grepl.data.frame.R
\name{grepl.data.frame}
\alias{grepl.data.frame}
\title{Grep a pattern in a full data.frame.}
\usage{
grepl.data.frame(
  data.frame,
  pattern,
  ignore.case = FALSE,
  perl = FALSE,
  fixed = FALSE,
  useBytes = FALSE
)
}
\arguments{
\item{data.frame}{Input data.frame.}

\item{pattern}{Character string containing a regular expression (or character string for \code{fixed = TRUE}) to be matched in the given character vector. Coerced by \code{as.character} to a character string if possible. If a character vector of length 2 or more is supplied, the first element is used with a warning. Missing values are allowed except for \code{regexpr} and \code{gregexpr}.}

\item{ignore.case}{If \code{FALSE}, the pattern matching is case sensitive and if \code{TRUE}, case is ignored during matching. By default \code{FALSE}.}

\item{perl}{Logical value to define if Perl-compatible regexps should be used. By default \code{FALSE}.}

\item{fixed}{Logical value to define if the pattern is a string to be matched as is. Overrides all conflicting arguments. By default \code{FALSE}.}

\item{useBytes}{Logical value to define if the matching is done byte-by-byte rather than character-by-character. By default \code{FALSE}.}
}
\value{
It will be return a logic vector with an element per each row of the data.frame. The value is \code{TRUE} when the patter is found at least once in the corresponding data.frame row.
}
\description{
The function helps to define which rows of an input data.frame contain a specific patter.
}
\examples{
iris = iris \%>\% filter(grepl.data.frame(iris, pattern = "setosa"))

}
